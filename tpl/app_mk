SHELL := /bin/bash

###############################################################################
# START CUTOMIZATION HERE
# Changes in this area should be enough to customize the building process.
# If other changes are necessary, feel free to do so ;)
###############################################################################

# The name of the application. Choose a descriptive name that should be unique
# such that the binary can be installed without conflicting with already
# existing Streamix applications.
APPNAME = <app_name>

# The version number of the application
MAJ_VERSION = 0.1
MIN_VERSION = 0

# list the external libraries prefixed with -l
EXT_LIBS =

# list the external libraries directories prefixed with -L
EXT_LIBS_DIR =

# list the external include files prefixed with -I
EXT_INCS_DIR =

# list of libraries required for the profiler
#PROFILER_LIBS = -lsmxmongo -lmongoc -lbson

# list include directories required for the profiler
#PROFILER_INCS_DIR = -I/usr/include/libmongoc-1.0 -I/usr/include/libbson-1.0

###############################################################################
# END CUTOMIZATION HERE
###############################################################################

UPSTREAM_VERSION = $(MAJ_VERSION).$(MIN_VERSION)
DEBIAN_REVISION = 0
VERSION = $(UPSTREAM_VERSION)-$(DEBIAN_REVISION)

DPKG_DIR = dpkg
DPKG_CTL_DIR = dpkg-ctl
DPKGS = $(DPKG_DIR)/$(APPNAME)_$(VERSION)_amd64
TGT_BIN = /opt/smx/bin
TGT_DOC = /opt/smx/doc/apps
TGT_CONF = /opt/smx/conf/apps

GENPATH = build
BOXIMPL = boxes/*
BOXES = $(wildcard $(BOXIMPL))
FORMAT = graphml

BIN_PATH = /opt/smx/bin

OUTGRAPH_NAME = $(APPNAME).$(FORMAT)
SIAGRAPH_NAME = sia_$(APPNAME).$(FORMAT)
PNSCGRAPH_NAME = pnsc_$(APPNAME).$(FORMAT)
OUTGRAPH = $(GENPATH)/$(OUTGRAPH_NAME)
SIAGRAPH = $(GENPATH)/$(SIAGRAPH_NAME)
PNSCGRAPH = $(GENPATH)/$(PNSCGRAPH_NAME)
OUTSRC = $(GENPATH)/app.c
OUTINC = $(wildcard $(BOXIMPL)/include/*_sig.h)

SOURCES = $(OUTSRC)

INCLUDES = $(wildcard $(BOXIMPL)/include/*.h)

INCLUDES_DIR = -I/usr/local/ \
	-I/opt/smx/include \
	-I/usr/include/libxml2 \
	-I. $(BOX_INC_DIR) $(PROFILER_INCS_DIR) $(EXT_INCS_DIR)

LINK_DIR = -L/usr/local/lib \
	-L/opt/smx/lib $(BOX_LIB_DIR) $(EXT_LIBS_DIR)

LINK_FILE = -lsmxrts \
	-lpthread \
	-lxml2 \
	-lzlog $(LIBS) $(PROFILER_LIBS) $(EXT_LIBS)

CC = gcc
CFLAGS = -Wall -DAPP_VERSION=\"$(UPSTREAM_VERSION)\"
DEBUG_FLAGS = -g -O0

all: $(APPNAME)

smx: $(OUTSRC) $(OUTINC)

sia: $(SIAGRAPH)

# compile with dot stuff and debug flags
debug: CFLAGS += $(DEBUG_FLAGS)
debug: $(APPNAME)

$(APPNAME): $(SOURCES) $(INCLUDES) boximpl
	$(CC) $(CFLAGS) $(SOURCES) $(INCLUDES_DIR) $(LINK_DIR) $(LINK_FILE) -o $@

boximpl: $(BOXES) setboxpaths
$(BOXES):
	$(MAKE) -C $@

setboxpaths:
	$(eval LIBS_A = $(wildcard $(BOXIMPL)/lib/*.a))
	$(eval LIBS = $(patsubst %, -l:%, $(notdir $(LIBS_A))))
	$(eval BOX_INC_DIR_RAW = $(wildcard $(BOXIMPL)/include))
	$(eval BOX_INC_DIR = $(patsubst %, -I%, $(BOX_INC_DIR_RAW)))
	$(eval BOX_LIB_DIR_RAW = $(wildcard $(BOXIMPL)/lib))
	$(eval BOX_LIB_DIR = $(patsubst %, -L%, $(BOX_LIB_DIR_RAW)))

$(SIAGRAPH): $(PNSCGRAPH)
	$(BIN_PATH)/smxsia -f $(FORMAT) -o $@ $^ $(GENPATH)/sia/*

$(PNSCGRAPH) $(OUTSRC) $(OUTINC): $(OUTGRAPH)
	$(BIN_PATH)/smxrtsp $^ -p $(GENPATH) -f $(FORMAT)

$(OUTGRAPH): $(APPNAME).smx
	$(BIN_PATH)/smxc -f $(FORMAT) -p $(GENPATH) $(SIA_INPUT) -o $(OUTGRAPH_NAME) $^


.PHONY: clean run clean_run valgrind boximpl $(BOXIMPL) setboxpaths dpkg $(DPKGS) install uninstall

clean: clean_run
	rm -rf $(GENPATH)
	rm -f $(APPNAME)
	rm -f $(APPNAME).c
	rm -f $(BOXIMPL)/include/*_sig.h
	rm -rf $(BOXIMPL)/lib
	rm -rf $(BOXIMPL)/obj

clean_run:
	rm -f out/*
	rm -f log/*
	rm -f <app_name>.log

run:
	./$(APPNAME)

test: clean_run run
	./test.sh

valgrind:
	valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes -v ./$(APPNAME)

install:
	mkdir -p (TGT_BIN) $(TGT_DOC) $(TGT_CONF)
	cp -a $(APPNAME) $(TGT_BIN)/$(APPNAME)_$(MAJ_VERSION)
	ln -sf $(APPNAME)_$(MAJ_VERSION) $(TGT_BIN)/$(APPNAME)
	cp -a README.md $(TGT_DOC)/$(APPNAME)_$(MAJ_VERSION).md
	cp -a app.xml $(TGT_CONF)/$(APPNAME)_$(MAJ_VERSION).xml

uninstall:
	rm $(TGT_BIN)/$(APPNAME)
	rm $(TGT_BIN)/$(APPNAME)_$(MAJ_VERSION)
	rm $(TGT_DOC)/$(APPNAME)_$(MAJ_VERSION).md
	rm $(TGT_CONF)/$(APPNAME)_$(MAJ_VERSION).xml

dpkg: $(DPKGS)
$(DPKGS):
	mkdir -p $@$(TGT_BIN)
	cp $(APPNAME) $@$(TGT_BIN)/$(APPNAME)_$(MAJ_VERSION)
	ln -sf $(APPNAME)_$(MAJ_VERSION) $@$(TGT_BIN)/$(APPNAME)
	mkdir -p $@$(TGT_DOC)
	cp README.md $@$(TGT_DOC)/$(APPNAME)_$(MAJ_VERSION).md
	mkdir -p $@$(TGT_CONF)
	cp app.xml $@$(TGT_CONF)/$(APPNAME)_$(MAJ_VERSION).xml
	mkdir -p $@/DEBIAN
	cp $(DPKG_CTL_DIR)/control $@/DEBIAN/control
	sed -i 's/<version>/$(VERSION)/g' $@/DEBIAN/control
	sed -i 's/<maj_version>/$(MAJ_VERSION)/g' $@/DEBIAN/control
	dpkg-deb -b $@

dpkg-clean:
	rm -rf $(DPKG_DIR)
