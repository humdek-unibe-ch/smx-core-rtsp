SHELL := /bin/bash

###############################################################################
# START CUTOMIZATION HERE
# Changes in this area should be enough to customize the building process.
# If other changes are necessary, feel free to do so ;)
###############################################################################

# The library name must start with lib and cannot contain any special characters
# (only use characters from [a-zA-Z0-9]). Make sure that the library name is
# unique. Good practice is to use the prefix smxbox.
LIBNAME = lib<lib_name>

# Each include path must be preceeded by the gcc option -I
MY_INCLUDES =

###############################################################################
# END CUTOMIZATION HERE
###############################################################################

BOXNAME = <box_name>
LOC_INC_DIR = include
LOC_SRC_DIR = src
LOC_OBJ_DIR = obj
LOC_LIB_DIR = lib

DPKG_DIR = dpkg
DPKG_CTL_DIR = dpkg-ctl
DPKGS = $(DPKG_DIR)/$(LIBNAME)_0.1-0 \
	   $(DPKG_DIR)/$(LIBNAME)-dev

TGT_INCLUDE = /opt/smx/include
TGT_LIB = /opt/smx/lib
TGT_DOC = /opt/smx/doc
TGT_CONF = /opt/smx/conf

STATLIB = $(LOC_LIB_DIR)/$(LIBNAME).a
DYNLIB = $(LOC_LIB_DIR)/$(LIBNAME).so

SOURCES = $(wildcard $(LOC_SRC_DIR)/*.c)
OBJECTS := $(patsubst $(LOC_SRC_DIR)/%.c, $(LOC_OBJ_DIR)/%.o, $(SOURCES))

INCLUDES = $(LOC_INC_DIR)/*.h

INCLUDES_DIR = -I$(LOC_INC_DIR) \
			   -I/usr/include/libxml2 \
			   -I$(TGT_INCLUDE) \
			   -I. $(MY_INCLUDES)

CFLAGS = -Wall -fPIC
DEBUG_FLAGS = -g -O0

CC = gcc

all: $(STATLIB) $(DYNLIB)

# compile with debug flags
debug: CFLAGS += $(DEBUG_FLAGS)
debug: all

$(STATLIB): $(OBJECTS)
	mkdir -p $(LOC_LIB_DIR)
	ar -cq $@ $^

$(DYNLIB): $(OBJECTS)
	$(CC) -shared $^ -o $@

# compile project
$(LOC_OBJ_DIR)/%.o: $(LOC_SRC_DIR)/%.c $(INCLUDES)
	mkdir -p $(LOC_OBJ_DIR)
	$(CC) $(CFLAGS) $(INCLUDES_DIR) $(LINK_FILE) -c $< -o $@

.PHONY: clean install uninstall doc dpkg $(DPKGS)

install:
	mkdir -p $(TGT_LIB) $(TGT_INCLUDE) $(TGT_DOC) $(TGT_CONF)
	cp -a $(LOC_INC_DIR)/*.h $(TGT_INCLUDE)/.
	cp -a $(LOC_LIB_DIR)/$(LIBNAME).a $(TGT_LIB)/.
	cp -a $(LOC_LIB_DIR)/$(LIBNAME).so $(TGT_LIB)/.
	cp -a README.md $(TGT_DOC)/$(BOXNAME).md
	cp -a box.xml $(TGT_CONF)/$(BOXNAME).xml

uninstall:
	rm $(addprefix $(TGT_INCLUDE)/,$(notdir $(wildcard $(INCLUDES))))
	rm $(TGT_LIB)/$(LIBNAME).a
	rm $(TGT_LIB)/$(LIBNAME).so
	rm $(TGT_DOC)/$(BOXNAME).md
	rm $(TGT_CONF)/$(BOXNAME).xml

clean:
	rm -rf $(LOC_OBJ_DIR)
	rm -rf $(LOC_LIB_DIR)
	rm -rf $(DPKG_DIR)

doc:
	doxygen .doxygen

dpkg: clean all $(DPKGS)
$(DPKGS):
	mkdir -p $@$(TGT_LIB)
	cp $(LOC_LIB_DIR)/$(LIBNAME).so $@$(TGT_LIB)/.
	cp $(LOC_LIB_DIR)/$(LIBNAME).a $@$(TGT_LIB)/.
	mkdir -p $@$(TGT_DOC)
	cp README.md $@$(TGT_DOC)/$(BOXNAME).md
	mkdir -p $@$(TGT_CONF)
	cp box.xml $@$(TGT_CONF)/$(BOXNAME).xml
	mkdir -p $@/DEBIAN
	@if [[ $@ == *-dev ]]; then \
		mkdir -p $@$(TGT_INCLUDE); \
		cp $(LOC_INC_DIR)/* $@$(TGT_INCLUDE)/.; \
		echo "cp $(LOC_INC_DIR)/* $@$(TGT_INCLUDE)/."; \
        cp $(DPKG_CTL_DIR)/control-dev $@/DEBIAN/control; \
    else \
        cp $(DPKG_CTL_DIR)/control $@/DEBIAN/control; \
	fi
	dpkg-deb -b $@
