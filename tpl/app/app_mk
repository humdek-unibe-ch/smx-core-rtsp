SHELL := /bin/bash

include config.mk

LIB_VERSION = $(VMAJ).$(VMIN)
UPSTREAM_VERSION = $(LIB_VERSION).$(VREV)
DEBIAN_REVISION = $(VDEB)
VERSION = $(UPSTREAM_VERSION)-$(DEBIAN_REVISION)

VAPPNAME = $(APPNAME)-$(LIB_VERSION)
VPKGNAME = <bin_name>$(LIB_VERSION)

TGT_INCLUDE = $(DESTDIR)<include_path>
TGT_LIB = $(DESTDIR)<lib_path>
TGT_BIN = $(DESTDIR)<bin_path>
TGT_DOC = $(DESTDIR)<doc_path>/$(VPKGNAME)
TGT_CONF = $(DESTDIR)<conf_path>/$(VPKGNAME)

GENPATH = build
BOXIMPL = boxes/*
BOXES = $(wildcard $(BOXIMPL))
FORMAT = graphml

OUTGRAPH_NAME = $(APPNAME).$(FORMAT)
SIAGRAPH_NAME = sia_$(APPNAME).$(FORMAT)
PNSCGRAPH_NAME = pnsc_$(APPNAME).$(FORMAT)
OUTGRAPH = $(GENPATH)/$(OUTGRAPH_NAME)
SIAGRAPH = $(GENPATH)/$(SIAGRAPH_NAME)
PNSCGRAPH = $(GENPATH)/$(PNSCGRAPH_NAME)
OUTSRC = $(GENPATH)/app.c
OUTINC = $(wildcard $(BOXIMPL)/include/*_sig.h)

SOURCES = $(OUTSRC)

INCLUDES = $(wildcard $(BOXIMPL)/include/*.h)

INCLUDES_DIR = -I/usr/local \
			   -I/usr/include/libbson-1.0 \
			   -I. \
			   -I $(TGT_INCLUDE)/lib$(RTS_LIB) \
			   $(BOX_INC_DIR) \
			   $(patsubst %, -I$(TGT_INCLUDE)/lib%, $(SMX_LIBS)) \
			   $(EXT_INCS_DIR)

LINK_DIR = -L/usr/local/lib \
	-L$(TGT_LIB) $(BOX_LIB_DIR) $(EXT_LIBS_DIR)

LINK_FILE = $(LIBS) \
	-lpthread \
	-lbson-1.0 \
	-l$(RTS_LIB) \
	$(patsubst %, -l%, $(SMX_LIBS)) \
	$(EXT_LIBS)

CC = gcc
CFLAGS = -Wall -DAPP_VERSION=\"$(UPSTREAM_VERSION)\" -DLIB_VERSION=\"$(LIB_VERSION)\" $(EXT_CFLAGS)
DEBUG_FLAGS = -g -O0 -DLTTNG_UST_DEBUG_VALGRIND

all: $(APPNAME)

smx: $(OUTSRC) $(OUTINC)

sia: $(SIAGRAPH)

# compile with dot stuff and debug flags
debug: CFLAGS += $(DEBUG_FLAGS)
debug: $(APPNAME)

$(APPNAME): $(SOURCES) $(INCLUDES) boximpl
	$(CC) $(CFLAGS) $(SOURCES) $(INCLUDES_DIR) $(LINK_DIR) $(LINK_FILE) -o $@

boximpl: $(BOXES) setboxpaths
$(BOXES):
	$(MAKE) -C $@ $(MAKECMDGOALS)

setboxpaths:
	$(eval LIBS_A = $(wildcard $(BOXIMPL)/lib/*.a))
	$(eval LIBS = $(patsubst %, -l:%, $(notdir $(LIBS_A))))
	$(eval BOX_INC_DIR_RAW = $(wildcard $(BOXIMPL)/include))
	$(eval BOX_INC_DIR = $(patsubst %, -I%, $(BOX_INC_DIR_RAW)))
	$(eval BOX_LIB_DIR_RAW = $(wildcard $(BOXIMPL)/lib))
	$(eval BOX_LIB_DIR = $(patsubst %, -L%, $(BOX_LIB_DIR_RAW)))

$(SIAGRAPH): $(PNSCGRAPH)
	$(TGT_BIN)/smxsia -f $(FORMAT) -o $@ $^ $(GENPATH)/sia/*

$(PNSCGRAPH) $(OUTSRC) $(OUTINC): $(OUTGRAPH)
	$(TGT_BIN)/$(SMXRTSP) $^ -p $(GENPATH) -f $(FORMAT) -e "<author>"

$(OUTGRAPH): $(APPNAME).smx
	$(TGT_BIN)/$(SMXC) -f $(FORMAT) -p $(GENPATH) $(SIA_INPUT) -o $(OUTGRAPH_NAME) $^


.PHONY: clean run clean_run valgrind boximpl $(BOXIMPL) setboxpaths install uninstall

clean: clean_run
	rm -rf $(GENPATH)
	rm -f $(APPNAME)
	rm -f $(APPNAME).c
	rm -f $(BOXIMPL)/include/*_sig.h
	rm -rf $(BOXIMPL)/lib
	rm -rf $(BOXIMPL)/obj

clean_run:
	rm -f out/*
	rm -f log/*

run:
	./$(APPNAME)

valgrind:
	valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes -v ./$(APPNAME)

install:
	mkdir -p $(TGT_BIN) $(TGT_DOC) $(TGT_CONF)
	cp -a $(APPNAME) $(TGT_BIN)/$(VAPPNAME)
	cp -a README.md $(TGT_DOC)/README.md
	cp -a app.json $(TGT_CONF)/app.json
	cp -a app.zlog $(TGT_CONF)/app.zlog

uninstall:
	rm $(TGT_BIN)/$(VAPPNAME)
	rm -rf $(TGT_DOC)
	rm -rf $(TGT_CONF)
